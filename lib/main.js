// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = [
    {
      rnd0: Math.random,
      E: function() {
        return Math.E;
      },
      LN2: function() {
        return Math.LN2;
      },
      LN10: function() {
        return Math.LN10;
      },
      LOG2E: function() {
        return Math.LOG2E;
      },
      LOG10E: function() {
        return Math.LOG10E;
      },
      PI: function() {
        return Math.PI;
      },
      SQRT1_2: function() {
        return Math.SQRT1_2;
      },
      SQRT2: function() {
        return Math.SQRT2;
      }
    }, {
      abs: Math.abs,
      round: Math.round,
      ceil: Math.ceil,
      floor: Math.floor,
      exp: Math.exp,
      cos: Math.cos,
      acos: Math.acos,
      sin: Math.sin,
      asin: Math.asin,
      tan: Math.tan,
      atan: Math.atan,
      log: Math.log,
      rnd1: function(a) {
        return Math.random() * a;
      },
      one_div: function(a) {
        if (a > 0) {
          return 1.0 / a;
        } else if ((a == null) || isNaN(a)) {
          return 1.0;
        } else {
          return a;
        }
      },
      sqrt: Math.sqrt,
      log10: function(x) {
        return Math.log(x, 10);
      },
      square: function(x) {
        return x * x;
      },
      cube: function(x) {
        return x * x * x;
      }
    }, {
      add: function(a, b) {
        return a + b;
      },
      sub: function(a, b) {
        return a - b;
      },
      sub_inv: function(b, a) {
        return a - b;
      },
      div: function(b, a) {
        if (b === 0) {
          return a;
        } else {
          return a / b;
        }
      },
      div_inv: function(a, b) {
        if (b === 0) {
          return a;
        } else {
          return a / b;
        }
      },
      mod: function(a, b) {
        if (b === 0) {
          return 1.0;
        } else {
          return a % b;
        }
      },
      mod_inv: function(b, a) {
        if (b === 0) {
          return 1.0;
        } else {
          return a % b;
        }
      },
      mul: function(a, b) {
        return a * b;
      },
      atan2: Math.atan2,
      step: function(x, edge) {
        if (x < edge) {
          return 0.0;
        } else {
          return 1.0;
        }
      },
      step_inv: function(edge, x) {
        if (x < edge) {
          return 0.0;
        } else {
          return 1.0;
        }
      }
    }
  ];

}).call(this);
